/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Customer;

import Business.Course.Course;
import Business.Enterprise.FitnessClubEnterprise;
import Business.UserAccount.CustomerAccount;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CourseQueue;
import Business.WorkQueue.CourseRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author luliu
 */
public class CourseViewJPanel extends javax.swing.JPanel {

    private JPanel container;
    private UserAccount account;
    private FitnessClubEnterprise fitenterprise;
    //private Course course;

    /**
     * Creates new form CourseViewJPanel
     */
    public CourseViewJPanel(JPanel container, UserAccount account, FitnessClubEnterprise fitenterprise) {
        initComponents();
        this.container = container;
        this.account = account;
        this.fitenterprise = fitenterprise;
        //this.course =course;

        populateRequest();

    }

    public void populateRequest() {
        CourseQueue courseQueue = account.getCourseQueue();
        DefaultTableModel model = (DefaultTableModel) myCourseJTable.getModel();

        model.setRowCount(0);
        for (CourseRequest courseRequest : courseQueue.getCourseRequestList()) {
            Object[] row = new Object[3];
            row[0] = courseRequest;
            row[1] = courseRequest.getReceiver();
            row[2] = courseRequest.getStatus();
            model.addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        renewBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        myCourseJTable = new javax.swing.JTable();
        reviewBtn = new javax.swing.JButton();

        renewBtn.setText("Renew Course");
        renewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renewBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("My Course History");

        myCourseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Name", "Trainer", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(myCourseJTable);

        reviewBtn.setText("Review Course");
        reviewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(renewBtn)
                        .addGap(18, 18, 18)
                        .addComponent(reviewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(122, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 257, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(renewBtn)
                    .addComponent(reviewBtn)
                    .addComponent(backBtn))
                .addGap(54, 54, 54))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(123, 123, 123)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(129, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void renewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renewBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = myCourseJTable.getSelectedRow();
        if (selectedRow >= 0) {
            CourseRequest courseRequest = (CourseRequest) myCourseJTable.getValueAt(selectedRow, 0);
            if (!courseRequest.getStatus().equals("Complete")) {
                JOptionPane.showMessageDialog(null, "This status cannot be changed");
            } else {
                courseRequest.setStatus("Renewed");
                for (Course course2 : fitenterprise.getCourseDirectory().getCourseList()) {
                    if (courseRequest.getCourse().equals(course2)) {
                        int remainSeats = course2.getRemainSeats();
                        course2.setRemainSeats(remainSeats - 1);
                    }
                }

                JOptionPane.showMessageDialog(null, "Renew Course Successfully!!");
                populateRequest();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
        populateRequest();
    }//GEN-LAST:event_renewBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBtnActionPerformed

    private void reviewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = myCourseJTable.getSelectedRow();

        if (selectedRow >= 0) {
            CourseRequest courseRequest = (CourseRequest) myCourseJTable.getValueAt(selectedRow, 0);
            if (!courseRequest.getStatus().equals("Complete")) {
//                reviewBtn.setEnabled(false);
//                renewBtn.setEnabled(false);
                JOptionPane.showMessageDialog(null, "This status cannot be changed");
                
                return;
            }
            Course course =( (CourseRequest) myCourseJTable.getValueAt(selectedRow, 0)).getCourse();
            ReviewCourseJPanel reviewCourseJPanel = new ReviewCourseJPanel(container, account, course, fitenterprise);
            container.add("reviewCourseJPanel", reviewCourseJPanel);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        }


    }//GEN-LAST:event_reviewBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable myCourseJTable;
    private javax.swing.JButton renewBtn;
    private javax.swing.JButton reviewBtn;
    // End of variables declaration//GEN-END:variables

}
